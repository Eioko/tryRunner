<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="code_sys.LayerMap.LayerOrdersMapper">

    <!-- 基础字段 -->
    <sql id="baseColumns">
        id, code, detail, user_id, product_id, buy_price, buy_number, trade_status,
        trade_time, refund_status, refund_time, is_refund_confirm, create_time
    </sql>

    <!-- 插入字段（不包含自增id） -->
    <sql id="insertColumns">
        code, detail, user_id, product_id, buy_price, buy_number, trade_status,
    trade_time, refund_status, refund_time, is_refund_confirm, create_time
    </sql>

    <!-- VO字段（关联查询） -->
    <sql id="voColumns">
        o.id, o.code, o.detail, o.user_id, o.product_id, o.buy_price, o.buy_number,
        o.trade_status, o.trade_time, o.refund_status, o.refund_time, o.is_refund_confirm,
        o.create_time, u.user_name, u.user_avatar, p.name AS product_title, p.cover_list AS product_cover
    </sql>

    <!-- 新增订单 -->
    <insert id="save" parameterType="code_sys.Po.Entity.Orders" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders (
        <include refid="insertColumns"/>
        ) VALUES (
        #{code}, #{detail}, #{userId}, #{productId}, #{buyPrice}, #{buyNumber},
        #{tradeStatus}, #{tradeTime}, #{refundStatus}, #{refundTime},
        #{isRefundConfirm}, #{createTime}
        )
    </insert>

    <!-- 更新订单 -->
    <update id="update" parameterType="code_sys.Po.Entity.Orders">
        UPDATE orders
        <trim prefix="SET" suffixOverrides=",">
            <if test="detail != null and detail != ''">detail = #{detail},</if>
            <if test="buyPrice != null">buy_price = #{buyPrice},</if>
            <if test="buyNumber != null">buy_number = #{buyNumber},</if>
            <if test="tradeStatus != null">trade_status = #{tradeStatus},</if>
            <if test="tradeTime != null">trade_time = #{tradeTime},</if>
            <if test="refundStatus != null">refund_status = #{refundStatus},</if>
            <if test="refundTime != null">refund_time = #{refundTime},</if>
            <if test="isRefundConfirm != null">is_refund_confirm = #{isRefundConfirm},</if>
        </trim>
        WHERE id = #{id}
    </update>

    <!-- 批量删除订单 -->
    <delete id="batchDelete">
        DELETE FROM orders
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 订单过滤条件 -->
    <sql id="orderFilter">
        <where>
            <if test="code != null and code != ''">
                AND o.code LIKE CONCAT('%', #{code}, '%')
            </if>
            <if test="detail != null and detail != ''">
                AND o.detail LIKE CONCAT('%', #{detail}, '%')
            </if>
            <if test="userId != null">
                AND o.user_id = #{userId}
            </if>
            <if test="productId != null">
                AND o.product_id = #{productId}
            </if>
            <if test="tradeStatus != null">
                AND o.trade_status = #{tradeStatus}
            </if>
            <if test="refundStatus != null">
                AND o.refund_status = #{refundStatus}
            </if>
            <if test="startTime != null and endTime != null">
                AND o.create_time BETWEEN #{startTime} AND #{endTime}
            </if>
            <if test="productIds != null and productIds.size() > 0">
                AND o.product_id IN
                <foreach collection="productIds" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </sql>

    <!-- 关联表定义 -->
    <sql id="orderJoin">
        FROM orders o
        LEFT JOIN user u ON u.id = o.user_id
        LEFT JOIN product p ON p.id = o.product_id
    </sql>

    <!-- 分页查询订单 -->
    <select id="query" resultMap="OrdersVOMap">
        SELECT <include refid="voColumns"/>
        <include refid="orderJoin"/>
        <include refid="orderFilter"/>
        ORDER BY o.create_time DESC
        <if test="current != null and size != null">
            LIMIT #{current}, #{size}
        </if>
    </select>

    <!-- 满足分页条件的数据总项 -->
    <select id="queryCount" resultType="int">
        SELECT COUNT(*)
        <include refid="orderJoin"/>
        <include refid="orderFilter"/>
    </select>

    <!-- 查询特定商品的订单 -->
    <select id="queryByProductIds" resultMap="OrdersVOMap">
        SELECT <include refid="voColumns"/>
        <include refid="orderJoin"/>
        WHERE o.product_id IN
        <foreach collection="productIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="tradeStatus != null">
            AND o.trade_status = #{tradeStatus}
        </if>
        <if test="code != null and code != ''">
            AND o.code LIKE CONCAT('%', #{code}, '%')
        </if>
        ORDER BY o.create_time DESC
    </select>

    <!-- 根据ID查询订单 -->
    <select id="findById" resultType="code_sys.Po.Entity.Orders">
        SELECT <include refid="baseColumns"/>
        FROM orders
        WHERE id = #{id}
    </select>

    <!-- 用户订单计数 -->
    <select id="countUserOrders" resultType="int">
        SELECT COUNT(*)
        FROM orders
        WHERE user_id = #{userId}
        AND id IN
        <foreach collection="orderIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- 检查用户是否有权限操作订单 -->
    <select id="checkUserOrderAccess" resultType="boolean">
        SELECT EXISTS(
            SELECT 1 FROM orders
            WHERE id = #{orderId}
              AND (user_id = #{userId}
                OR product_id IN (
                    SELECT id FROM product WHERE user_id = #{userId}
                )
                )
        )
    </select>

    <!-- 检查订单状态 -->
    <select id="checkOrderStatus" resultType="map">
        SELECT
            trade_status AS tradeStatus,
            refund_status AS refundStatus
        FROM orders
        WHERE id = #{orderId}
    </select>

    <!-- 订单VO结果映射 -->
    <resultMap id="OrdersVOMap" type="code_sys.Po.Vo.OrdersVO">
        <id column="id" property="id"/>
        <result column="code" property="code"/>
        <result column="detail" property="detail"/>
        <result column="user_id" property="userId"/>
        <result column="product_id" property="productId"/>
        <result column="buy_price" property="buyPrice"/>
        <result column="buy_number" property="buyNumber"/>
        <result column="trade_status" property="tradeStatus"/>
        <result column="trade_time" property="tradeTime"/>
        <result column="refund_status" property="refundStatus"/>
        <result column="refund_time" property="refundTime"/>
        <result column="is_refund_confirm" property="isRefundConfirm"/>
        <result column="create_time" property="createTime"/>
        <result column="user_name" property="userName"/>
        <result column="user_avatar" property="userAvatar"/>
        <result column="product_title" property="productTitle"/>
        <result column="product_cover" property="productCover"/>
    </resultMap>
</mapper>